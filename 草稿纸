

git clone https://github.com/respeaker/seeed-voicecard.git
cd seeed-voicecard #下载声卡驱动
sudo ./install.sh #安装声卡驱动
reboot  #重启 

sudo arecord -D hw:1,0 -f S32_LE -r 16000 -c 2 test.wav
-D : 设备
-r : 频率



--------------------------------------------------------------------------

pip install librosa

>>> import librosa
>>> # Load a wav file
>>> y, sr = librosa.load('./beat.wav', sr=None)
>>> sr
44100

>>> import librosa
>>> # Load a wav file
>>> y, sr = librosa.load('./beat.wav', sr=None)
>>> # extract mfcc feature
>>> mfccs = librosa.feature.mfcc(y=y, sr=sr, n_mfcc=40)
>>> mfccs.shape
(40, 194)

>>> import librosa
>>> import librosa.display
>>> # Load a wav file
>>> y, sr = librosa.load('./beat.wav', sr=None)
>>> # plot a wavform
>>> plt.figure()
>>> librosa.display.waveplot(y, sr)
>>> plt.title('Beat wavform')
>>> plt.show()



---------------------------------------------------------------------------
sudo passwd root
系统会提示输入两遍的root密码，输入你想设的密码即可

把根目录扩大到整个SD卡
sudo raspi-config
Advanced Options
选择Expand Filesystem，将根目录扩展到这个SD卡，
充分利用SD卡的存储空间。
退出设置界面，重启树莓派。
sudo reboot



sudo apt-get install ttf-wqy-zenhei
将安装文泉驿的开源中文字体
sudo apt-get install scim-pinyin
Linux下的中文输入法SCIM
快捷键是Ctrl+空格。或者直接点击屏幕右上角的输入法图标选择。

配置中文操作系统
sudo raspi-config  
选择Internationalisation Options-->Change Locale-->zh_CN.UTF-8-->OK，然后重启系统，设置为中文操作系统。


sudo nano  /etc/apt/sources.list 
将初始化中的代码中默认的官方软件源注释掉 # 添加下面的软件源（中国科技大学的软件源 ） 
deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi
保存并退出：Ctrl+X   按Y（保存数据）  再按回车

sudo nano  /etc/apt/sources.list.d/raspi.list 
将初始化中的代码中默认的官方软件源注释掉 # 添加下面的软件源 
deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/ stretch main ui

3.更新本地的软件源
sudo apt-get update 
sudo apt-get dist-upgrade -y

-----------------------------------------------
shell脚本


#!/bin/bash
#monitor available disk space
#提取本服务器的IP地址信息  
 
SPACE=` df -hP | awk '{print int($5)}'`

usage1=` echo $SPACE | awk '{print int($2)}' `
echo $usage1
if [ $usage1 -ge 30 ]
then
  echo " 服务器 磁盘空间 使用率已经超过90%，请及时处理。" > ~/warning.log
fi


------------------------------------------------
python依赖环境
$ sudo apt-get install build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev
下载python3.6版本源码并解压
$ wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz
$ tar zxvf Python-3.6.1.tgz
$ cd Python-3.6.1
 
编译安装
$ sudo ./configure && sudo make && sudo make install

------------------------------------------------------------
GPIO

安装 python-dev
sudo apt-get install python-dev    

$ sudo apt-get update
$ sudo apt-get dist-update
$ sudo apt-get install python-rpi.gpio

源程序中安装
$ wget http://raspberry-gpio-python.googlecode.com/files/RPi.GPIO-0.6.3.tar.gz
$ sudo tar -zxvf RPi.GPIO-0.6.3.tar.gz
$ cd RPi.GPIO-0.6.3
$ python setup.py install

控制led.py

# -*- coding: utf-8 -*- 
import RPi.GPIO as GPIO
import time

pin = 40                         ## 使用40号引脚
GPIO.setmode(GPIO.BOARD)        ## 使用BOARD引脚编号，此外还有 GPIO.BCM

GPIO.setwarnings(False)        # fix bug 1    
GPIO.setup(pin, GPIO.OUT)       ## 设置40号引脚输出

while:                  ## 重复
    GPIO.output(pin, GPIO.HIGH)   ## 打开 GPIO 引脚（HIGH）
    time.sleep(1)               ## 等1秒
    GPIO.output(pin, GPIO.LOW)  ## 关闭 GPIO 引脚（LOW）
    time.sleep(1)               ## 等1秒

PIO.cleanup()                   ## 清除

--------------------------------------------------------------
git clone git://git.drogon.net/wiringPi
cd wiringPi
./build


unzip cpu_show_uptime.zip
cd  ~/cpu_show_uptime
cc -o cpushow_uptime pcd8544_rpi.c PCD8544.c  -L/usr/local/lib -lwiringPi

pcd8544_rpi.c 和PCD8544.c 是当前目录下的源程序文件，-L/usr/local/lib和-lwiringPi是引用库文件。
输入以下命令运行程序
sudo ./cpushow_uptime



























